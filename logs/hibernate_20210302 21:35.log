[DEBUG] 2021-03-02 21:34:53.340 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-03-02 21:34:53.353 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-03-02 21:34:53.365 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-03-02 21:34:53.534 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-03-02 21:34:53.540 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-03-02 21:34:53.950 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-03-02 21:34:53.951 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-03-02 21:34:53.962 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-03-02 21:34:54.585 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-03-02 21:34:54.633 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-03-02 21:34:54.636 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-03-02 21:34:54.680 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-03-02 21:34:54.850 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7a8406c2
[DEBUG] 2021-03-02 21:34:54.850 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7a8406c2
[DEBUG] 2021-03-02 21:34:54.851 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a8406c2
[DEBUG] 2021-03-02 21:34:54.852 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@704641e3
[DEBUG] 2021-03-02 21:34:54.855 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d7ca698
[DEBUG] 2021-03-02 21:34:54.858 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@16e7b402
[DEBUG] 2021-03-02 21:34:54.865 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ba5aa7a
[DEBUG] 2021-03-02 21:34:54.865 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ba5aa7a
[DEBUG] 2021-03-02 21:34:54.865 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ba5aa7a
[DEBUG] 2021-03-02 21:34:54.869 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3fe46690
[DEBUG] 2021-03-02 21:34:54.869 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3fe46690
[DEBUG] 2021-03-02 21:34:54.870 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3fe46690
[DEBUG] 2021-03-02 21:34:54.873 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@317e9c3c
[DEBUG] 2021-03-02 21:34:54.873 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@317e9c3c
[DEBUG] 2021-03-02 21:34:54.873 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@317e9c3c
[DEBUG] 2021-03-02 21:34:54.875 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@47ffe971
[DEBUG] 2021-03-02 21:34:54.875 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@47ffe971
[DEBUG] 2021-03-02 21:34:54.875 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47ffe971
[DEBUG] 2021-03-02 21:34:54.879 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@10c07b8d
[DEBUG] 2021-03-02 21:34:54.880 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@10c07b8d
[DEBUG] 2021-03-02 21:34:54.880 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@10c07b8d
[DEBUG] 2021-03-02 21:34:54.882 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@21c815e4
[DEBUG] 2021-03-02 21:34:54.883 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@21c815e4
[DEBUG] 2021-03-02 21:34:54.883 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@21c815e4
[DEBUG] 2021-03-02 21:34:54.886 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@761956ac
[DEBUG] 2021-03-02 21:34:54.887 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@761956ac
[DEBUG] 2021-03-02 21:34:54.887 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@761956ac
[DEBUG] 2021-03-02 21:34:54.891 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@36cc9385
[DEBUG] 2021-03-02 21:34:54.891 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@36cc9385
[DEBUG] 2021-03-02 21:34:54.893 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@10643593
[DEBUG] 2021-03-02 21:34:54.894 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@10643593
[DEBUG] 2021-03-02 21:34:54.897 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6917bb4
[DEBUG] 2021-03-02 21:34:54.897 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6917bb4
[DEBUG] 2021-03-02 21:34:54.898 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c7f96b1
[DEBUG] 2021-03-02 21:34:54.899 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7b6e5c12
[DEBUG] 2021-03-02 21:34:54.903 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4ee6291f
[DEBUG] 2021-03-02 21:34:54.903 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4ee6291f
[DEBUG] 2021-03-02 21:34:54.904 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@44e93c1f
[DEBUG] 2021-03-02 21:34:54.905 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@44e93c1f
[DEBUG] 2021-03-02 21:34:54.937 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@290d10ef
[DEBUG] 2021-03-02 21:34:54.937 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@290d10ef
[DEBUG] 2021-03-02 21:34:54.962 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4110765e
[DEBUG] 2021-03-02 21:34:54.963 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4110765e
[DEBUG] 2021-03-02 21:34:54.974 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@20cece0b
[DEBUG] 2021-03-02 21:34:54.974 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@20cece0b
[DEBUG] 2021-03-02 21:34:54.977 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@73c9e8e8
[DEBUG] 2021-03-02 21:34:54.978 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@73c9e8e8
[DEBUG] 2021-03-02 21:34:54.990 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58ff8d79
[DEBUG] 2021-03-02 21:34:54.990 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@58ff8d79
[DEBUG] 2021-03-02 21:34:54.994 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62db3891
[DEBUG] 2021-03-02 21:34:54.998 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62db3891
[DEBUG] 2021-03-02 21:34:55.007 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30364216
[DEBUG] 2021-03-02 21:34:55.007 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@30364216
[DEBUG] 2021-03-02 21:34:55.009 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a472566
[DEBUG] 2021-03-02 21:34:55.010 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a472566
[DEBUG] 2021-03-02 21:34:55.013 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@767191b1
[DEBUG] 2021-03-02 21:34:55.013 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@767191b1
[DEBUG] 2021-03-02 21:34:55.015 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a094db2
[DEBUG] 2021-03-02 21:34:55.016 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a094db2
[DEBUG] 2021-03-02 21:34:55.016 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a094db2
[DEBUG] 2021-03-02 21:34:55.018 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6b2e46af
[DEBUG] 2021-03-02 21:34:55.019 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4047d2d9
[DEBUG] 2021-03-02 21:34:55.020 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4047d2d9
[DEBUG] 2021-03-02 21:34:55.020 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4047d2d9
[DEBUG] 2021-03-02 21:34:55.021 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@660f0c
[DEBUG] 2021-03-02 21:34:55.023 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@35c12c7a
[DEBUG] 2021-03-02 21:34:55.024 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@35c12c7a
[DEBUG] 2021-03-02 21:34:55.032 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@17f2dd85
[DEBUG] 2021-03-02 21:34:55.032 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@17f2dd85
[DEBUG] 2021-03-02 21:34:55.035 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5d43409a
[DEBUG] 2021-03-02 21:34:55.036 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5d43409a
[DEBUG] 2021-03-02 21:34:55.039 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@51c959a4
[DEBUG] 2021-03-02 21:34:55.039 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@51c959a4
[DEBUG] 2021-03-02 21:34:55.041 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1effd53c
[DEBUG] 2021-03-02 21:34:55.041 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1effd53c
[DEBUG] 2021-03-02 21:34:55.042 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5fa23c
[DEBUG] 2021-03-02 21:34:55.045 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@43045f9f
[DEBUG] 2021-03-02 21:34:55.045 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@43045f9f
[DEBUG] 2021-03-02 21:34:55.045 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@43045f9f
[DEBUG] 2021-03-02 21:34:55.047 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3968bc60
[DEBUG] 2021-03-02 21:34:55.048 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3968bc60
[DEBUG] 2021-03-02 21:34:55.048 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3968bc60
[DEBUG] 2021-03-02 21:34:55.051 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@21bd20ee
[DEBUG] 2021-03-02 21:34:55.052 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@60bbacfc
[DEBUG] 2021-03-02 21:34:55.064 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3c5dbdf8
[DEBUG] 2021-03-02 21:34:55.066 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3c5dbdf8
[DEBUG] 2021-03-02 21:34:55.067 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3c5dbdf8
[DEBUG] 2021-03-02 21:34:55.071 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2f5ac102
[DEBUG] 2021-03-02 21:34:55.072 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2f5ac102
[DEBUG] 2021-03-02 21:34:55.072 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2f5ac102
[DEBUG] 2021-03-02 21:34:55.073 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@80bfdc6
[DEBUG] 2021-03-02 21:34:55.073 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6981f8f3
[DEBUG] 2021-03-02 21:34:55.075 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@46963479
[DEBUG] 2021-03-02 21:34:55.075 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@46963479
[DEBUG] 2021-03-02 21:34:55.076 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@55e42449
[DEBUG] 2021-03-02 21:34:55.080 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@15400fff
[DEBUG] 2021-03-02 21:34:55.081 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@15400fff
[DEBUG] 2021-03-02 21:34:55.087 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@a9f023e
[DEBUG] 2021-03-02 21:34:55.087 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a9f023e
[DEBUG] 2021-03-02 21:34:55.088 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@68d7a2df
[DEBUG] 2021-03-02 21:34:55.089 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3ed7821
[DEBUG] 2021-03-02 21:34:55.092 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7ceb4478
[DEBUG] 2021-03-02 21:34:55.100 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@524a076e
[DEBUG] 2021-03-02 21:34:55.100 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@524a076e
[DEBUG] 2021-03-02 21:34:55.105 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6e0c6a7a
[DEBUG] 2021-03-02 21:34:55.106 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@467b684d
[DEBUG] 2021-03-02 21:34:55.106 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7baf1f5a
[DEBUG] 2021-03-02 21:34:55.106 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6cc86152
[DEBUG] 2021-03-02 21:34:55.106 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@611a990b
[DEBUG] 2021-03-02 21:34:55.107 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7cbeac65
[DEBUG] 2021-03-02 21:34:55.107 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7fe82967
[DEBUG] 2021-03-02 21:34:55.107 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@50850539
[DEBUG] 2021-03-02 21:34:55.169 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-03-02 21:34:55.171 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-03-02 21:34:55.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-02 21:34:55.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-03-02 21:34:55.174 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-03-02 21:34:55.176 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-03-02 21:34:55.177 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-03-02 21:34:55.184 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-02 21:34:55.186 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-03-02 21:34:55.192 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-03-02 21:34:55.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-03-02 21:34:55.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-03-02 21:34:55.195 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-03-02 21:34:55.197 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-03-02 21:34:55.222 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_plant_collector
[INFO ] 2021-03-02 21:34:55.223 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-03-02 21:34:55.223 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-03-02 21:35:00.591 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-03-02 21:35:00.805 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-03-02 21:35:00.805 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-03-02 21:35:00.806 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-03-02 21:35:00.865 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-03-02 21:35:00.895 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-03-02 21:35:00.937 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-03-02 21:35:01.044 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-03-02 21:35:01.053 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60bb7995] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40fa8766]
[DEBUG] 2021-03-02 21:35:01.217 [main] AnnotationBinder - Binding entity from annotated class: com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:01.270 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-02 21:35:01.282 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-03-02 21:35:01.287 [main] EntityBinder - Bind entity com.acuster.entity.User on table user
[DEBUG] 2021-03-02 21:35:01.334 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.343 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-02 21:35:01.346 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:id]
[DEBUG] 2021-03-02 21:35:01.352 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-02 21:35:01.357 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-02 21:35:01.363 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-02 21:35:01.366 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=date_of_birth, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.366 [main] PropertyBinder - MetadataSourceProcessor property dateOfBirth with lazy=false
[DEBUG] 2021-03-02 21:35:01.366 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:dateOfBirth]
[DEBUG] 2021-03-02 21:35:01.366 [main] SimpleValueBinder - building SimpleValue for dateOfBirth
[DEBUG] 2021-03-02 21:35:01.367 [main] PropertyBinder - Building property dateOfBirth
[DEBUG] 2021-03-02 21:35:01.369 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.370 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-03-02 21:35:01.370 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:firstName]
[DEBUG] 2021-03-02 21:35:01.370 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-03-02 21:35:01.371 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-03-02 21:35:01.371 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.371 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-03-02 21:35:01.372 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:lastName]
[DEBUG] 2021-03-02 21:35:01.372 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-03-02 21:35:01.372 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-03-02 21:35:01.375 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-03-02 21:35:01.376 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=plants, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.378 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.394 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.394 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=plants_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.395 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='plants_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-02 21:35:01.397 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-03-02 21:35:01.398 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-03-02 21:35:01.399 [main] CollectionBinder - Collection role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:01.403 [main] PropertyBinder - Building property plants
[DEBUG] 2021-03-02 21:35:01.405 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.405 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-03-02 21:35:01.405 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:userName]
[DEBUG] 2021-03-02 21:35:01.406 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-03-02 21:35:01.406 [main] PropertyBinder - Building property userName
[DEBUG] 2021-03-02 21:35:01.406 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.406 [main] PropertyBinder - MetadataSourceProcessor property userPassword with lazy=false
[DEBUG] 2021-03-02 21:35:01.406 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:userPassword]
[DEBUG] 2021-03-02 21:35:01.407 [main] SimpleValueBinder - building SimpleValue for userPassword
[DEBUG] 2021-03-02 21:35:01.407 [main] PropertyBinder - Building property userPassword
[DEBUG] 2021-03-02 21:35:01.407 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_points, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.407 [main] PropertyBinder - MetadataSourceProcessor property userPoints with lazy=false
[DEBUG] 2021-03-02 21:35:01.407 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.User:userPoints]
[DEBUG] 2021-03-02 21:35:01.408 [main] SimpleValueBinder - building SimpleValue for userPoints
[DEBUG] 2021-03-02 21:35:01.408 [main] PropertyBinder - Building property userPoints
[DEBUG] 2021-03-02 21:35:01.411 [main] AnnotationBinder - Binding entity from annotated class: com.acuster.entity.Plant
[DEBUG] 2021-03-02 21:35:01.411 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-03-02 21:35:01.411 [main] EntityBinder - Import with entity name Plant
[DEBUG] 2021-03-02 21:35:01.411 [main] EntityBinder - Bind entity com.acuster.entity.Plant on table plant
[DEBUG] 2021-03-02 21:35:01.416 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(plant), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.417 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2021-03-02 21:35:01.417 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.Plant:id]
[DEBUG] 2021-03-02 21:35:01.417 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2021-03-02 21:35:01.417 [main] PropertyBinder - Building property id
[DEBUG] 2021-03-02 21:35:01.418 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-03-02 21:35:01.418 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(plant), mappingColumn=plant_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.418 [main] PropertyBinder - MetadataSourceProcessor property plantName with lazy=false
[DEBUG] 2021-03-02 21:35:01.418 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.acuster.entity.Plant:plantName]
[DEBUG] 2021-03-02 21:35:01.418 [main] SimpleValueBinder - building SimpleValue for plantName
[DEBUG] 2021-03-02 21:35:01.419 [main] PropertyBinder - Building property plantName
[DEBUG] 2021-03-02 21:35:01.419 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-03-02 21:35:01.419 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(plant), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-03-02 21:35:01.422 [main] PropertyBinder - Building property user
[DEBUG] 2021-03-02 21:35:01.424 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-02 21:35:01.425 [main] SimpleValueBinder - Starting fillSimpleValue for dateOfBirth
[DEBUG] 2021-03-02 21:35:01.425 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-03-02 21:35:01.425 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-03-02 21:35:01.425 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-03-02 21:35:01.426 [main] SimpleValueBinder - Starting fillSimpleValue for userPassword
[DEBUG] 2021-03-02 21:35:01.426 [main] SimpleValueBinder - Starting fillSimpleValue for userPoints
[DEBUG] 2021-03-02 21:35:01.426 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2021-03-02 21:35:01.426 [main] SimpleValueBinder - Starting fillSimpleValue for plantName
[DEBUG] 2021-03-02 21:35:01.433 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-03-02 21:35:01.433 [main] PrimaryKey - Forcing column [id] to be non-null as it is part of the primary key for table [plant]
[DEBUG] 2021-03-02 21:35:01.433 [main] CollectionSecondPass - Second pass for collection: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:01.435 [main] CollectionBinder - Binding a OneToMany: com.acuster.entity.User.plants through a foreign key
[DEBUG] 2021-03-02 21:35:01.438 [main] CollectionBinder - Mapping collection: com.acuster.entity.User.plants -> plant
[DEBUG] 2021-03-02 21:35:01.439 [main] TableBinder - Retrieving property com.acuster.entity.Plant.user
[DEBUG] 2021-03-02 21:35:01.439 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: com.acuster.entity.Plant
[DEBUG] 2021-03-02 21:35:01.440 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:01.445 [main] InFlightMetadataCollectorImpl - Resolving reference to class: com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:01.532 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-03-02 21:35:01.533 [main] Settings - SessionFactory name : null
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Statistics: disabled
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-03-02 21:35:01.534 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-03-02 21:35:01.535 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-03-02 21:35:01.535 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-03-02 21:35:01.535 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-03-02 21:35:01.535 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-03-02 21:35:01.536 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-03-02 21:35:01.536 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-03-02 21:35:01.536 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-03-02 21:35:01.536 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-03-02 21:35:01.536 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-03-02 21:35:01.537 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-03-02 21:35:01.537 [main] Settings - Named query checking : enabled
[DEBUG] 2021-03-02 21:35:01.537 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-03-02 21:35:01.537 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-03-02 21:35:01.538 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-03-02 21:35:01.538 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-03-02 21:35:01.538 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-03-02 21:35:01.539 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-03-02 21:35:01.539 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-03-02 21:35:01.539 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-03-02 21:35:01.539 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-03-02 21:35:01.540 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-03-02 21:35:01.541 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-03-02 21:35:01.661 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-03-02 21:35:01.698 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-03-02 21:35:01.698 [main] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit5-rt.jar:/Applications/IntelliJ IDEA.app/Contents/plugins/junit/lib/junit-rt.jar:/Users/amber/IdeaProjects/plantParentHelper/target/test-classes:/Users/amber/IdeaProjects/plantParentHelper/target/classes:/Users/amber/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/Users/amber/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/Users/amber/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/Users/amber/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/Users/amber/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar:/Users/amber/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/Users/amber/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/Users/amber/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/Users/amber/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/Users/amber/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/Users/amber/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/amber/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/amber/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/Users/amber/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/Users/amber/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/Users/amber/.m2/repository/javax/servlet/jsp/jstl/jstl-api/1.2/jstl-api-1.2.jar:/Users/amber/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/amber/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/amber/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/amber/.m2/repository/taglibs/standard/1.1.2/standard-1.1.2.jar:/Users/amber/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/Users/amber/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/Users/amber/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/Users/amber/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/amber/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/Users/amber/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/Users/amber/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/Users/amber/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/amber/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/Users/amber/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/Users/amber/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/amber/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/Users/amber/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/Users/amber/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/Users/amber/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/Users/amber/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/Users/amber/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/Users/amber/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/Users/amber/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/Users/amber/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/Users/amber/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/Users/amber/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/Users/amber/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://openjdk.java.net/, user.timezone=America/Chicago, os.name=Mac OS X, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 com.acuster.persistence.PlantaDaoTest, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/amber, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=/Library/Java/JavaVirtualMachines/jdk-11.0.9.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, connection.password=catsrule, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, hibernate.c3p0.max_size=20, java.runtime.version=11.0.9+7-LTS, user.name=amber, path.separator=:, hibernate.connection.username=****, os.version=10.15.7, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_plant_collector, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.version=18.9, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/0j/_6m1dygx2clgd055rv1qhdwh0000gp/T/, java.version=11.0.9, user.dir=/Users/amber/IdeaProjects/plantParentHelper, os.arch=x86_64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4f281aaf, java.library.path=/Users/amber/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=11.0.9+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, connection.url=jdbc:mysql://localhost:3306/test_plant_collector, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[DEBUG] 2021-03-02 21:35:01.771 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-03-02 21:35:01.771 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-03-02 21:35:01.773 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-03-02 21:35:01.774 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@60bb7995] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3cc053]
[DEBUG] 2021-03-02 21:35:01.902 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.acuster.entity.Plant] is safe
[DEBUG] 2021-03-02 21:35:01.902 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acuster.entity.Plant
[DEBUG] 2021-03-02 21:35:01.939 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.acuster.entity.Plant] is safe
[DEBUG] 2021-03-02 21:35:01.941 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acuster.entity.Plant
[DEBUG] 2021-03-02 21:35:03.367 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.acuster.entity.User] is safe
[DEBUG] 2021-03-02 21:35:03.367 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:03.368 [main] ClassLoaderAccessImpl - Not known whether passed class name [com.acuster.entity.User] is safe
[DEBUG] 2021-03-02 21:35:03.368 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:03.690 [main] AbstractCollectionPersister - Static SQL for collection: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:03.690 [main] AbstractCollectionPersister -  Row insert: update plant set user_id=? where id=?
[DEBUG] 2021-03-02 21:35:03.691 [main] AbstractCollectionPersister -  Row update: update plant set  where id=?
[DEBUG] 2021-03-02 21:35:03.691 [main] AbstractCollectionPersister -  Row delete: update plant set user_id=null where user_id=? and id=?
[DEBUG] 2021-03-02 21:35:03.691 [main] AbstractCollectionPersister -  One-shot delete: update plant set user_id=null where user_id=?
[DEBUG] 2021-03-02 21:35:03.702 [main] AbstractEntityPersister - Static SQL for entity: com.acuster.entity.Plant
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Version select: select id from plant where id =?
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Snapshot select: select plant_.id, plant_.plant_name as plant_na2_0_, plant_.user_id as user_id3_0_ from plant plant_ where plant_.id=?
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Insert 0: insert into plant (plant_name, user_id, id) values (?, ?, ?)
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Update 0: update plant set plant_name=?, user_id=? where id=?
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Delete 0: delete from plant where id=?
[DEBUG] 2021-03-02 21:35:03.703 [main] AbstractEntityPersister -  Identity insert: insert into plant (plant_name, user_id) values (?, ?)
[DEBUG] 2021-03-02 21:35:03.845 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@130a6eb9]
[DEBUG] 2021-03-02 21:35:03.962 [main] MetamodelGraphWalker - Visiting attribute path : plantName
[DEBUG] 2021-03-02 21:35:03.962 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-02 21:35:03.970 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49b89425]
[DEBUG] 2021-03-02 21:35:03.973 [main] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2021-03-02 21:35:03.973 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-02 21:35:03.973 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-02 21:35:03.974 [main] MetamodelGraphWalker - Visiting attribute path : user.plants
[DEBUG] 2021-03-02 21:35:03.974 [main] MetamodelGraphWalker - Property path deemed to be circular : user.plants
[DEBUG] 2021-03-02 21:35:03.974 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-02 21:35:03.974 [main] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2021-03-02 21:35:03.974 [main] MetamodelGraphWalker - Visiting attribute path : user.userPoints
[DEBUG] 2021-03-02 21:35:03.975 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-02 21:35:04.037 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-02 21:35:04.093 [main] LoadPlanTreePrinter - LoadPlan(entity=com.acuster.entity.Plant)
    - Returns
       - EntityReturnImpl(entity=com.acuster.entity.Plant, querySpaceUid=<gen:0>, path=com.acuster.entity.Plant)
          - EntityAttributeFetchImpl(entity=com.acuster.entity.User, querySpaceUid=<gen:1>, path=com.acuster.entity.Plant.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acuster.entity.Plant)
          - SQL table alias mapping - plant0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.acuster.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-03-02 21:35:04.112 [main] EntityLoader - Static select for entity com.acuster.entity.Plant [NONE]: select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:04.112 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c42c8c]
[DEBUG] 2021-03-02 21:35:04.113 [main] MetamodelGraphWalker - Visiting attribute path : plantName
[DEBUG] 2021-03-02 21:35:04.113 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-02 21:35:04.113 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23564dd2]
[DEBUG] 2021-03-02 21:35:04.113 [main] MetamodelGraphWalker - Visiting attribute path : user.dateOfBirth
[DEBUG] 2021-03-02 21:35:04.113 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Visiting attribute path : user.plants
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Property path deemed to be circular : user.plants
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Visiting attribute path : user.userPassword
[DEBUG] 2021-03-02 21:35:04.114 [main] MetamodelGraphWalker - Visiting attribute path : user.userPoints
[DEBUG] 2021-03-02 21:35:04.114 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-02 21:35:04.117 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-02 21:35:04.118 [main] LoadPlanTreePrinter - LoadPlan(entity=com.acuster.entity.Plant)
    - Returns
       - EntityReturnImpl(entity=com.acuster.entity.Plant, querySpaceUid=<gen:0>, path=com.acuster.entity.Plant)
          - EntityAttributeFetchImpl(entity=com.acuster.entity.User, querySpaceUid=<gen:1>, path=com.acuster.entity.Plant.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acuster.entity.Plant)
          - SQL table alias mapping - plant0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.acuster.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

[DEBUG] 2021-03-02 21:35:04.118 [main] EntityLoader - Static select for entity com.acuster.entity.Plant [READ]: select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:04.150 [main] Loader - Static select for action ACTION_MERGE on entity com.acuster.entity.Plant: select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_ from plant plant0_ where plant0_.id=?
[DEBUG] 2021-03-02 21:35:04.151 [main] Loader - Static select for action ACTION_REFRESH on entity com.acuster.entity.Plant: select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_ from plant plant0_ where plant0_.id=?
[DEBUG] 2021-03-02 21:35:04.152 [main] AbstractEntityPersister - Static SQL for entity: com.acuster.entity.User
[DEBUG] 2021-03-02 21:35:04.152 [main] AbstractEntityPersister -  Version select: select id from user where id =?
[DEBUG] 2021-03-02 21:35:04.152 [main] AbstractEntityPersister -  Snapshot select: select user_.id, user_.date_of_birth as date_of_2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.user_name as user_nam5_1_, user_.user_password as user_pas6_1_, user_.user_points as user_poi7_1_ from user user_ where user_.id=?
[DEBUG] 2021-03-02 21:35:04.152 [main] AbstractEntityPersister -  Insert 0: insert into user (date_of_birth, first_name, last_name, user_name, user_password, user_points, id) values (?, ?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-02 21:35:04.152 [main] AbstractEntityPersister -  Update 0: update user set date_of_birth=?, first_name=?, last_name=?, user_name=?, user_password=?, user_points=? where id=?
[DEBUG] 2021-03-02 21:35:04.153 [main] AbstractEntityPersister -  Delete 0: delete from user where id=?
[DEBUG] 2021-03-02 21:35:04.153 [main] AbstractEntityPersister -  Identity insert: insert into user (date_of_birth, first_name, last_name, user_name, user_password, user_points) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-03-02 21:35:04.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17176b18]
[DEBUG] 2021-03-02 21:35:04.153 [main] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2021-03-02 21:35:04.153 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-02 21:35:04.153 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-02 21:35:04.154 [main] MetamodelGraphWalker - Visiting attribute path : plants
[DEBUG] 2021-03-02 21:35:04.155 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6c9a3661]
[DEBUG] 2021-03-02 21:35:04.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5d9f1e]
[DEBUG] 2021-03-02 21:35:04.164 [main] MetamodelGraphWalker - Visiting attribute path : plants.plantName
[DEBUG] 2021-03-02 21:35:04.164 [main] MetamodelGraphWalker - Visiting attribute path : plants.user
[DEBUG] 2021-03-02 21:35:04.165 [main] MetamodelGraphWalker - Property path deemed to be circular : plants.user
[DEBUG] 2021-03-02 21:35:04.166 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-02 21:35:04.166 [main] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2021-03-02 21:35:04.167 [main] MetamodelGraphWalker - Visiting attribute path : userPoints
[DEBUG] 2021-03-02 21:35:04.169 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-02 21:35:04.170 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-02 21:35:04.237 [main] LoadPlanTreePrinter - LoadPlan(entity=com.acuster.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.acuster.entity.User, querySpaceUid=<gen:0>, path=com.acuster.entity.User)
          - CollectionAttributeFetchImpl(collection=com.acuster.entity.User.plants, querySpaceUid=<gen:1>, path=com.acuster.entity.User.plants)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.acuster.entity.Plant, querySpaceUid=<gen:2>, path=com.acuster.entity.User.plants.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acuster.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(plants)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.acuster.entity.User.plants)
                - SQL table alias mapping - plants1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.acuster.entity.Plant)
                      - SQL table alias mapping - plants1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2021-03-02 21:35:04.238 [main] EntityLoader - Static select for entity com.acuster.entity.User [NONE]: select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:04.238 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b218c74]
[DEBUG] 2021-03-02 21:35:04.238 [main] MetamodelGraphWalker - Visiting attribute path : dateOfBirth
[DEBUG] 2021-03-02 21:35:04.238 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-03-02 21:35:04.239 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-03-02 21:35:04.239 [main] MetamodelGraphWalker - Visiting attribute path : plants
[DEBUG] 2021-03-02 21:35:04.239 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42c54bad]
[DEBUG] 2021-03-02 21:35:04.239 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb4cc0e]
[DEBUG] 2021-03-02 21:35:04.239 [main] MetamodelGraphWalker - Visiting attribute path : plants.plantName
[DEBUG] 2021-03-02 21:35:04.239 [main] MetamodelGraphWalker - Visiting attribute path : plants.user
[DEBUG] 2021-03-02 21:35:04.239 [main] MetamodelGraphWalker - Property path deemed to be circular : plants.user
[DEBUG] 2021-03-02 21:35:04.240 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-03-02 21:35:04.240 [main] MetamodelGraphWalker - Visiting attribute path : userPassword
[DEBUG] 2021-03-02 21:35:04.240 [main] MetamodelGraphWalker - Visiting attribute path : userPoints
[DEBUG] 2021-03-02 21:35:04.240 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-02 21:35:04.240 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-02 21:35:04.242 [main] LoadPlanTreePrinter - LoadPlan(entity=com.acuster.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.acuster.entity.User, querySpaceUid=<gen:0>, path=com.acuster.entity.User)
          - CollectionAttributeFetchImpl(collection=com.acuster.entity.User.plants, querySpaceUid=<gen:1>, path=com.acuster.entity.User.plants)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.acuster.entity.Plant, querySpaceUid=<gen:2>, path=com.acuster.entity.User.plants.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.acuster.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(plants)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.acuster.entity.User.plants)
                - SQL table alias mapping - plants1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_0_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_0_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.acuster.entity.Plant)
                      - SQL table alias mapping - plants1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}

[DEBUG] 2021-03-02 21:35:04.246 [main] EntityLoader - Static select for entity com.acuster.entity.User [READ]: select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:04.249 [main] Loader - Static select for action ACTION_MERGE on entity com.acuster.entity.User: select user0_.id as id1_1_1_, user0_.date_of_birth as date_of_2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, user0_.user_password as user_pas6_1_1_, user0_.user_points as user_poi7_1_1_, plants1_.user_id as user_id3_0_3_, plants1_.id as id1_0_3_, plants1_.id as id1_0_0_, plants1_.plant_name as plant_na2_0_0_, plants1_.user_id as user_id3_0_0_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:04.250 [main] Loader - Static select for action ACTION_REFRESH on entity com.acuster.entity.User: select user0_.id as id1_1_1_, user0_.date_of_birth as date_of_2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.user_name as user_nam5_1_1_, user0_.user_password as user_pas6_1_1_, user0_.user_points as user_poi7_1_1_, plants1_.user_id as user_id3_0_3_, plants1_.id as id1_0_3_, plants1_.id as id1_0_0_, plants1_.plant_name as plant_na2_0_0_, plants1_.user_id as user_id3_0_0_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:04.262 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57c69937]
[DEBUG] 2021-03-02 21:35:04.263 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad1c363]
[DEBUG] 2021-03-02 21:35:04.264 [main] MetamodelGraphWalker - Visiting attribute path : plantName
[DEBUG] 2021-03-02 21:35:04.264 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-03-02 21:35:04.264 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-03-02 21:35:04.265 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-03-02 21:35:04.273 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-03-02 21:35:04.274 [main] LoadPlanTreePrinter - LoadPlan(collection=com.acuster.entity.User.plants)
    - Returns
       - CollectionReturnImpl(collection=com.acuster.entity.User.plants, querySpaceUid=<gen:0>, path=[com.acuster.entity.User.plants])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.acuster.entity.Plant, querySpaceUid=<gen:1>, path=[com.acuster.entity.User.plants].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.acuster.entity.User.plants)
          - SQL table alias mapping - plants0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.acuster.entity.Plant)
                - SQL table alias mapping - plants0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

[DEBUG] 2021-03-02 21:35:04.275 [main] CollectionLoader - Static select for collection com.acuster.entity.User.plants: select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:04.406 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-03-02 21:35:04.406 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-03-02 21:35:04.408 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-03-02 21:35:04.419 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-03-02 21:35:04.421 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-03-02 21:35:04.425 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-03-02 21:35:04.425 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-03-02 21:35:04.428 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27358a19
[DEBUG] 2021-03-02 21:35:04.432 [main] SessionFactoryRegistry - Registering SessionFactory: 432c9f78-eb37-4f5f-946b-8484a5ae535a (<unnamed>)
[DEBUG] 2021-03-02 21:35:04.432 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-03-02 21:35:04.673 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-03-02 21:35:04.726 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:04.873 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:04.893 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:04.927 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:04.930 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:04.931 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.931 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:04.931 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.934 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:04.934 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.935 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:04.936 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.953 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:04.957 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.958 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:04.958 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.958 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:04.958 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.958 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:04.959 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:04.961 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:04.961 [main] SQL - select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:04.964 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:04.969 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:04.970 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:04.971 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:04.974 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:04.975 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:04.975 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:04.975 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.976 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:04.976 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:04.976 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:04.977 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:04.977 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:04.977 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:04.977 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:04.978 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-02 21:35:04.978 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#3
[DEBUG] 2021-03-02 21:35:04.978 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:05.001 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-02 21:35:05.001 [main] TransactionImpl - begin
[DEBUG] 2021-03-02 21:35:05.042 [main] TransactionImpl - committing
[DEBUG] 2021-03-02 21:35:05.045 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-02 21:35:05.045 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-02 21:35:05.047 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2021-03-02 21:35:05.049 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-02 21:35:05.051 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-02 21:35:05.052 [main] EntityPrinter - com.acuster.entity.Plant{id=3, user=com.acuster.entity.User#2, plantName=Monstera}
[DEBUG] 2021-03-02 21:35:05.277 [main] SQL - delete from plant where id=?
[DEBUG] 2021-03-02 21:35:05.307 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:05.310 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:05.312 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2021-03-02 21:35:05.313 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:05.370 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:05.370 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#3
[DEBUG] 2021-03-02 21:35:05.370 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:05.719 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Plant as generatedAlias0 where generatedAlias0.plantName=:param0
[DEBUG] 2021-03-02 21:35:05.812 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5c5c7cc4
[DEBUG] 2021-03-02 21:35:05.924 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0 where generatedAlias0.plantName=:param0
[DEBUG] 2021-03-02 21:35:05.940 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:05.960 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acuster'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Plant'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'plantName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-02 21:35:06.121 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.155 [main] FromElement - FromClause{level=1} : com.acuster.entity.Plant (generatedAlias0) -> plant0_
[DEBUG] 2021-03-02 21:35:06.158 [main] FromReferenceNode - Resolved : generatedAlias0 -> plant0_.id
[DEBUG] 2021-03-02 21:35:06.166 [main] FromReferenceNode - Resolved : generatedAlias0 -> plant0_.id
[DEBUG] 2021-03-02 21:35:06.169 [main] DotNode - getDataType() : plantName -> org.hibernate.type.StringType@6917bb4
[DEBUG] 2021-03-02 21:35:06.172 [main] FromReferenceNode - Resolved : generatedAlias0.plantName -> plant0_.plant_name
[DEBUG] 2021-03-02 21:35:06.179 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.180 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} plant0_.id ) ( FromClause{level=1} plant plant0_ ) ( where ( = ( plant0_.plant_name plant0_.id plantName ) ? ) ) )
[DEBUG] 2021-03-02 21:35:06.200 [main] JoinProcessor - Using FROM fragment [plant plant0_]
[DEBUG] 2021-03-02 21:35:06.201 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.202 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (plant)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'plant0_.id as id1_0_' {alias=generatedAlias0, className=com.acuster.entity.Plant, tableAlias=plant0_}
    |  \-[SQL_TOKEN] SqlFragment: 'plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[plant0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'plant plant0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=plant,tableAlias=plant0_,origin=null,columns={,className=com.acuster.entity.Plant}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'plant0_.plant_name' {propertyName=plantName,dereferenceType=PRIMITIVE,getPropertyPath=plantName,path=generatedAlias0.plantName,tableAlias=plant0_,className=com.acuster.entity.Plant,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'plant0_.id' {alias=generatedAlias0, className=com.acuster.entity.Plant, tableAlias=plant0_}
          |  \-[IDENT] IdentNode: 'plantName' {originalText=plantName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6917bb4}

[DEBUG] 2021-03-02 21:35:06.202 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:06.215 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0 where generatedAlias0.plantName=:param0
[DEBUG] 2021-03-02 21:35:06.216 [main] QueryTranslatorImpl - SQL: select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_ where plant0_.plant_name=?
[DEBUG] 2021-03-02 21:35:06.216 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:06.279 [main] SQL - select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_ where plant0_.plant_name=?
[DEBUG] 2021-03-02 21:35:06.295 [main] Loader - Result set row: 0
[DEBUG] 2021-03-02 21:35:06.295 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.296 [main] Loader - Result set row: 1
[DEBUG] 2021-03-02 21:35:06.296 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.296 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.296 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:06.296 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.297 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.297 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.297 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:06.303 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.305 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.306 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.307 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.307 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.308 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.308 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-03-02 21:35:06.308 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.308 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1964-04-01
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.309 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Processing attribute `userName` : value = jcoyne
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret1
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 750
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:06.310 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:06.311 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.311 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.311 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.311 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:06.311 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.311 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.311 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.311 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.312 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#1
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.312 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.319 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.509 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Plant as generatedAlias0 where generatedAlias0.plantName like :param0
[DEBUG] 2021-03-02 21:35:06.510 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0 where generatedAlias0.plantName like :param0
[DEBUG] 2021-03-02 21:35:06.517 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:06.521 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'acuster'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Plant'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'plantName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-03-02 21:35:06.522 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.522 [main] FromElement - FromClause{level=1} : com.acuster.entity.Plant (generatedAlias0) -> plant0_
[DEBUG] 2021-03-02 21:35:06.523 [main] FromReferenceNode - Resolved : generatedAlias0 -> plant0_.id
[DEBUG] 2021-03-02 21:35:06.523 [main] FromReferenceNode - Resolved : generatedAlias0 -> plant0_.id
[DEBUG] 2021-03-02 21:35:06.524 [main] DotNode - getDataType() : plantName -> org.hibernate.type.StringType@6917bb4
[DEBUG] 2021-03-02 21:35:06.524 [main] FromReferenceNode - Resolved : generatedAlias0.plantName -> plant0_.plant_name
[DEBUG] 2021-03-02 21:35:06.524 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.525 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} plant0_.id ) ( FromClause{level=1} plant plant0_ ) ( where ( like ( plant0_.plant_name plant0_.id plantName ) ? ) ) )
[DEBUG] 2021-03-02 21:35:06.525 [main] JoinProcessor - Using FROM fragment [plant plant0_]
[DEBUG] 2021-03-02 21:35:06.525 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:06.526 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (plant)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'plant0_.id as id1_0_' {alias=generatedAlias0, className=com.acuster.entity.Plant, tableAlias=plant0_}
    |  \-[SQL_TOKEN] SqlFragment: 'plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[plant0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'plant plant0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=plant,tableAlias=plant0_,origin=null,columns={,className=com.acuster.entity.Plant}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'plant0_.plant_name' {propertyName=plantName,dereferenceType=PRIMITIVE,getPropertyPath=plantName,path=generatedAlias0.plantName,tableAlias=plant0_,className=com.acuster.entity.Plant,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'plant0_.id' {alias=generatedAlias0, className=com.acuster.entity.Plant, tableAlias=plant0_}
          |  \-[IDENT] IdentNode: 'plantName' {originalText=plantName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6917bb4}

[DEBUG] 2021-03-02 21:35:06.527 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:06.527 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0 where generatedAlias0.plantName like :param0
[DEBUG] 2021-03-02 21:35:06.527 [main] QueryTranslatorImpl - SQL: select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_ where plant0_.plant_name like ?
[DEBUG] 2021-03-02 21:35:06.527 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:06.528 [main] SQL - select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_ where plant0_.plant_name like ?
[DEBUG] 2021-03-02 21:35:06.534 [main] Loader - Result set row: 0
[DEBUG] 2021-03-02 21:35:06.534 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.535 [main] Loader - Result set row: 1
[DEBUG] 2021-03-02 21:35:06.536 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.538 [main] Loader - Result set row: 2
[DEBUG] 2021-03-02 21:35:06.539 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:06.541 [main] Loader - Result set row: 3
[DEBUG] 2021-03-02 21:35:06.541 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.541 [main] Loader - Result set row: 4
[DEBUG] 2021-03-02 21:35:06.542 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:06.542 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.542 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:06.542 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.542 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.542 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.545 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:06.548 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.549 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.549 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.550 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.551 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.552 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.553 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-03-02 21:35:06.553 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.553 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.554 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:06.554 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1964-04-01
[DEBUG] 2021-03-02 21:35:06.554 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.555 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2021-03-02 21:35:06.555 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.555 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Processing attribute `userName` : value = jcoyne
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret1
[DEBUG] 2021-03-02 21:35:06.556 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 750
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.557 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.558 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:06.558 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.558 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:06.558 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.559 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.559 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#1
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.559 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.559 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:06.563 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.564 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.565 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.566 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.566 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.566 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.566 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.566 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:06.567 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.567 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:06.567 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.567 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:06.567 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:06.568 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.569 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.569 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.570 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:06.570 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.570 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.570 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.571 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.571 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.571 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.571 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.571 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.571 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#2
[DEBUG] 2021-03-02 21:35:06.571 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.572 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:06.572 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Satin Pothos
[DEBUG] 2021-03-02 21:35:06.572 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.572 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-02 21:35:06.572 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.572 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:06.577 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.578 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.579 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:06.579 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.579 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.579 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#4]
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1986-07-08
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Karen
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Mack
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.582 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Processing attribute `userName` : value = kmack
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret4
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 325
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.583 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#4]
[DEBUG] 2021-03-02 21:35:06.583 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.583 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:06.584 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.584 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.584 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#4
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:06.585 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Goldfish Plant
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.586 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:06.586 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.723 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:06.727 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.727 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.728 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.729 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:06.730 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.730 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.730 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.730 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.730 [main] SQL - select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:06.732 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.733 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.734 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.734 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.734 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.734 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.735 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:06.735 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.735 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.735 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.735 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.735 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.736 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.736 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.736 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.737 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-02 21:35:06.737 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#3
[DEBUG] 2021-03-02 21:35:06.737 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.879 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:06.884 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.886 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:06.888 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.889 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.890 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.890 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.890 [main] SQL - select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:06.894 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.894 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.895 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.895 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.898 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.898 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.898 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:06.898 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.898 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.898 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.899 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.899 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.899 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.899 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.899 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.899 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-02 21:35:06.899 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#3
[DEBUG] 2021-03-02 21:35:06.899 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.905 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-02 21:35:06.905 [main] TransactionImpl - begin
[DEBUG] 2021-03-02 21:35:06.908 [main] TransactionImpl - committing
[DEBUG] 2021-03-02 21:35:06.908 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-02 21:35:06.909 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-02 21:35:06.911 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-02 21:35:06.911 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-02 21:35:06.911 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-02 21:35:06.911 [main] EntityPrinter - com.acuster.entity.Plant{id=3, user=com.acuster.entity.User#2, plantName=Maiden Hair Fern}
[DEBUG] 2021-03-02 21:35:06.912 [main] SQL - update plant set plant_name=?, user_id=? where id=?
[DEBUG] 2021-03-02 21:35:06.918 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.919 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:06.920 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:06.923 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.924 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:06.924 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.924 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Maiden Hair Fern
[DEBUG] 2021-03-02 21:35:06.924 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.925 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.925 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.926 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:06.927 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.927 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:06.927 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.927 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.927 [main] SQL - select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:06.929 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.929 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:06.930 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.930 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:06.930 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.930 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.931 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:06.931 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.931 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:06.931 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:06.931 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:06.931 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.931 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:06.931 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:06.931 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:06.932 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-02 21:35:06.932 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#3
[DEBUG] 2021-03-02 21:35:06.932 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:07.040 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Plant as generatedAlias0
[DEBUG] 2021-03-02 21:35:07.040 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0
[DEBUG] 2021-03-02 21:35:07.041 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:07.042 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  \-[IDENT] Node: 'acuster'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Plant'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2021-03-02 21:35:07.042 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:07.042 [main] FromElement - FromClause{level=1} : com.acuster.entity.Plant (generatedAlias0) -> plant0_
[DEBUG] 2021-03-02 21:35:07.042 [main] FromReferenceNode - Resolved : generatedAlias0 -> plant0_.id
[DEBUG] 2021-03-02 21:35:07.043 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:07.043 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} plant0_.id ) ( FromClause{level=1} plant plant0_ ) )
[DEBUG] 2021-03-02 21:35:07.043 [main] JoinProcessor - Using FROM fragment [plant plant0_]
[DEBUG] 2021-03-02 21:35:07.043 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-03-02 21:35:07.044 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (plant)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'plant0_.id as id1_0_' {alias=generatedAlias0, className=com.acuster.entity.Plant, tableAlias=plant0_}
    |  \-[SQL_TOKEN] SqlFragment: 'plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[plant0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'plant plant0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=plant,tableAlias=plant0_,origin=null,columns={,className=com.acuster.entity.Plant}}

[DEBUG] 2021-03-02 21:35:07.044 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:07.044 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from com.acuster.entity.Plant as generatedAlias0
[DEBUG] 2021-03-02 21:35:07.044 [main] QueryTranslatorImpl - SQL: select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_
[DEBUG] 2021-03-02 21:35:07.044 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-03-02 21:35:07.044 [main] SQL - select plant0_.id as id1_0_, plant0_.plant_name as plant_na2_0_, plant0_.user_id as user_id3_0_ from plant plant0_
[DEBUG] 2021-03-02 21:35:07.047 [main] Loader - Result set row: 0
[DEBUG] 2021-03-02 21:35:07.048 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.048 [main] Loader - Result set row: 1
[DEBUG] 2021-03-02 21:35:07.048 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:07.048 [main] Loader - Result set row: 2
[DEBUG] 2021-03-02 21:35:07.049 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:07.049 [main] Loader - Result set row: 3
[DEBUG] 2021-03-02 21:35:07.049 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.049 [main] Loader - Result set row: 4
[DEBUG] 2021-03-02 21:35:07.049 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:07.051 [main] Loader - Result set row: 5
[DEBUG] 2021-03-02 21:35:07.052 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.053 [main] Loader - Result set row: 6
[DEBUG] 2021-03-02 21:35:07.053 [main] Loader - Result row: EntityKey[com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:07.053 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.053 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.053 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.053 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.053 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.053 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:07.056 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.057 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.057 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.057 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:07.058 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.058 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.058 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-03-02 21:35:07.058 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.058 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.058 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.058 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1964-04-01
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `userName` : value = jcoyne
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret1
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 750
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.059 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.062 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.064 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.064 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.064 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.064 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#1
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:07.065 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.065 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:07.067 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.068 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.069 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:07.069 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:07.069 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.070 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1988-05-08
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Fred
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Hensen
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:07.070 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Processing attribute `userName` : value = fhensen
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret2
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 25
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.071 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#2]
[DEBUG] 2021-03-02 21:35:07.071 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.071 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#2]
[DEBUG] 2021-03-02 21:35:07.072 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.072 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.072 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#2
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#2]
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.072 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#3]
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Satin Pothos
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-02 21:35:07.073 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.073 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:07.075 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.076 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.076 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:07.076 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:07.077 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.077 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#4]
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1986-07-08
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Karen
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Mack
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `userName` : value = kmack
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret4
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 325
[DEBUG] 2021-03-02 21:35:07.077 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.078 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#4]
[DEBUG] 2021-03-02 21:35:07.078 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.078 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#4]
[DEBUG] 2021-03-02 21:35:07.078 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.079 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.079 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#4
[DEBUG] 2021-03-02 21:35:07.079 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#5]
[DEBUG] 2021-03-02 21:35:07.079 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.079 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.079 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Goldfish Plant
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.080 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#7]
[DEBUG] 2021-03-02 21:35:07.080 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:07.208 [main] SQL - select user0_.id as id1_1_0_, user0_.date_of_birth as date_of_2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.user_name as user_nam5_1_0_, user0_.user_password as user_pas6_1_0_, user0_.user_points as user_poi7_1_0_, plants1_.user_id as user_id3_0_1_, plants1_.id as id1_0_1_, plants1_.id as id1_0_2_, plants1_.plant_name as plant_na2_0_2_, plants1_.user_id as user_id3_0_2_ from user user0_ left outer join plant plants1_ on user0_.id=plants1_.user_id where user0_.id=?
[DEBUG] 2021-03-02 21:35:07.210 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.211 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.212 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:07.212 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.213 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-03-02 21:35:07.213 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.213 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1964-04-01
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `userName` : value = jcoyne
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret1
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 750
[DEBUG] 2021-03-02 21:35:07.214 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.215 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.216 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.217 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.217 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.217 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.217 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.217 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.217 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.217 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.217 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.217 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.217 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.User#1
[DEBUG] 2021-03-02 21:35:07.217 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:07.221 [main] TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2021-03-02 21:35:07.222 [main] TransactionImpl - begin
[DEBUG] 2021-03-02 21:35:07.234 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2021-03-02 21:35:07.237 [main] SQL - insert into plant (plant_name, user_id) values (?, ?)
[DEBUG] 2021-03-02 21:35:07.244 [main] IdentifierGeneratorHelper - Natively generated identity: 12
[DEBUG] 2021-03-02 21:35:07.244 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.245 [main] TransactionImpl - committing
[DEBUG] 2021-03-02 21:35:07.246 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2021-03-02 21:35:07.246 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2021-03-02 21:35:07.246 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2021-03-02 21:35:07.246 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2021-03-02 21:35:07.246 [main] EntityPrinter - Listing entities:
[DEBUG] 2021-03-02 21:35:07.246 [main] EntityPrinter - com.acuster.entity.Plant{id=12, user=com.acuster.entity.User#1, plantName=Jade Plant}
[DEBUG] 2021-03-02 21:35:07.247 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:07.248 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2021-03-02 21:35:07.250 [main] SQL - select plant0_.id as id1_0_0_, plant0_.plant_name as plant_na2_0_0_, plant0_.user_id as user_id3_0_0_, user1_.id as id1_1_1_, user1_.date_of_birth as date_of_2_1_1_, user1_.first_name as first_na3_1_1_, user1_.last_name as last_nam4_1_1_, user1_.user_name as user_nam5_1_1_, user1_.user_password as user_pas6_1_1_, user1_.user_points as user_poi7_1_1_ from plant plant0_ left outer join user user1_ on plant0_.user_id=user1_.id where plant0_.id=?
[DEBUG] 2021-03-02 21:35:07.253 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.254 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-03-02 21:35:07.254 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#12]
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Jade Plant
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#12]
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `dateOfBirth` : value = 1964-04-01
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`dateOfBirth`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Joe
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Coyne
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Processing attribute `plants` : value = NOT NULL COLLECTION
[DEBUG] 2021-03-02 21:35:07.255 [main] TwoPhaseLoad - Attribute (`plants`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Processing attribute `userName` : value = jcoyne
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Processing attribute `userPassword` : value = supersecret1
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Attribute (`userPassword`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Processing attribute `userPoints` : value = 750
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Attribute (`userPoints`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.256 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.User#1]
[DEBUG] 2021-03-02 21:35:07.256 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.256 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.256 [main] SQL - select plants0_.user_id as user_id3_0_0_, plants0_.id as id1_0_0_, plants0_.id as id1_0_1_, plants0_.plant_name as plant_na2_0_1_, plants0_.user_id as user_id3_0_1_ from plant plants0_ where plants0_.user_id=?
[DEBUG] 2021-03-02 21:35:07.258 [main] ResultSetProcessorImpl - Preparing collection initializer : [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.259 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-03-02 21:35:07.259 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.259 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-03-02 21:35:07.260 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.260 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-03-02 21:35:07.260 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.260 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2021-03-02 21:35:07.260 [main] CollectionReferenceInitializerImpl - Found row of collection: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#1]
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Monstera
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.261 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#4]
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Resolving attributes for [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Processing attribute `plantName` : value = Golden Pothos
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Attribute (`plantName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-03-02 21:35:07.262 [main] TwoPhaseLoad - Done materializing entity [com.acuster.entity.Plant#6]
[DEBUG] 2021-03-02 21:35:07.263 [main] CollectionLoadContext - 1 collections were found in result set for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.263 [main] CollectionLoadContext - Collection fully initialized: [com.acuster.entity.User.plants#1]
[DEBUG] 2021-03-02 21:35:07.263 [main] CollectionLoadContext - 1 collections initialized for role: com.acuster.entity.User.plants
[DEBUG] 2021-03-02 21:35:07.263 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-03-02 21:35:07.263 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-03-02 21:35:07.263 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : com.acuster.entity.Plant#12
[DEBUG] 2021-03-02 21:35:07.263 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
